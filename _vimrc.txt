set number
set relativenumber
set scrolloff=10
set nowrap
set wildmenu
set wildmode=list:longest
set guioptions-=m
set guioptions-=T
set guioptions-=r
set guioptions-=L
set backspace=indent,eol,start
set noexpandtab
set tabstop=2
set shiftwidth=2
set smarttab
set expandtab
set splitright
set termguicolors

set encoding=utf-8

syntax on
imap jj <Esc>
nnoremap <C-`> :term<CR>
nnoremap <C-f> :NERDTreeToggle<CR>
let g:user_emmet_leader_key='<C-,>'
set guifont=Consolas:h12:cANSI

call plug#begin('~/vimfiles/autoload')

" Themes
Plug 'morhetz/gruvbox'
Plug 'joshdick/onedark.vim'
Plug 'arcticicestudio/nord-vim'

" Plugins
Plug 'preservim/nerdtree'
Plug 'mattn/emmet-vim'
Plug 'peitalin/vim-jsx-typescript'
Plug 'vim-scripts/AutoComplPop'
Plug 'pangloss/vim-javascript'
Plug 'hail2u/vim-css3-syntax'
Plug 'cakebaker/scss-syntax.vim'
Plug 'othree/html5.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-Themes'
Plug 'ap/vim-css-color'
Plug 'dense-analysis/ale'
Plug 'sheerun/vim-polyglot'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

call plug#end()

let g:user_emmet_install_global = 0
autocmd FileType html,css EmmetInstall
colorscheme nord
let g:airline_theme='nord'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.maxlinenr = 'Îž'

let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'javascript': ['eslint'],
\}
let g:ale_fix_on_save = 1

nnoremap <C-p> :Files<CR>
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>h :History<CR>
let g:fzf_preview_window = ['up:40%:hidden', 'ctrl-/']
let g:fzf_buffers_jump = 1
let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'
let g:fzf_tags_command = 'ctags -R'
let g:fzf_commands_expect = 'alt-enter,ctrl-x'

set nobackup
set nowritebackup
set updatetime=300
set signcolumn=yes
inoremap <expr> <cr> coc#pum#visible() ? coc#pum#confirm() : "\<CR>"
inoremap <silent><expr> <cr> coc#pum#visible() ? coc#_select_confirm() : "\<C-g>u\<CR>"
function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

inoremap <silent><expr> <Tab>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()
inoremap <silent><expr> <S-Tab>
      \ coc#pum#visible() ? coc#pum#prev(1) :
      \ CheckBackspace() ? "\<S-Tab>" :
      \ coc#refresh()
