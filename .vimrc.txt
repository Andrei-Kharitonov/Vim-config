" === Vim settings ===
syntax on
set encoding=utf-8
set number
set relativenumber
set cursorline
set scrolloff=10
set nowrap
set wildmenu
set wildmode=list:longest
set backspace=indent,eol,start
set noexpandtab
set tabstop=2
set shiftwidth=2
set smarttab
set expandtab
set termguicolors


" === GVim settings ===
" Enable if you use GVim
"set guioptions-=m
"set guioptions-=T
"set guioptions-=r
"set guioptions-=L
"set guifont=Consolas:h12:cANSI


" === Vim plugins ===
call plug#begin('~/vimfiles/autoload')

Plug 'morhetz/gruvbox'                " Theme
Plug 'joshdick/onedark.vim'           " Theme
Plug 'arcticicestudio/nord-vim'       " Theme
Plug 'mhinz/vim-startify'             " Start screen
Plug 'preservim/nerdtree'             " File list
Plug 'mattn/emmet-vim'                " Emmet
Plug 'neoclide/vim-jsx-improve'       " Jsx syntax
Plug 'vim-airline/vim-airline'        " Bottom panel
Plug 'vim-airline/vim-airline-Themes' " Bottom panel themes
Plug 'ap/vim-css-color'               " Colors in css
Plug 'dense-analysis/ale'             " Code linter
Plug 'sheerun/vim-polyglot'           " Lang analysis
Plug 'junegunn/fzf'                   " File search
Plug 'junegunn/fzf.vim'               " File search
Plug 'neoclide/coc.nvim'              " Autocomplete
Plug 'tpope/vim-fugitive'             " Git commands
Plug 'airblade/vim-gitgutter'         " Git change lines
Plug 'voldikss/vim-floaterm'          " Terminal
Plug 'dstein64/vim-win'               " Windows navigation

call plug#end()


" === Key mapping ===
imap jj <Esc>
nnoremap <C-f> :NERDTreeToggle<CR>
nnoremap <C-t> :FloatermNew<CR>
nnoremap <C-p> :Files<CR>
nnoremap <Leader>S :SSave<CR>
nnoremap <Leader>C :SClose<CR>
nnoremap <Leader>f :call CocActionAsync('jumpDefinition')<CR>
nnoremap <Leader>n :bn<CR>
nnoremap <Leader>p :bp<CR>
nnoremap <Leader>D :bdelete<CR>
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>h :History<CR>


" === Theme ===
colorscheme nord


" === Startify ===
let g:startify_custom_header = [
\ '   ____   ____ __           ',
\ '   \   \ /   /|__|  _____   ',
\ '    \   Y   / |  | /     \  ',
\ '     \     /  |  ||  Y Y  \ ',
\ '      \___/   |__||__|_|__/ ',
\ '                            ' 
\ ]

let g:startify_bookmarks = [
\ { 'v': '~/.vimrc' },
\ { 'w': '~/Projects-work'},
\ { 's': '~/Projects-work/source'},
\ ]

let g:startify_lists = [
\ { 'type': 'bookmarks', 'header': ['   Bookmarks']},
\ { 'type': 'sessions', 'header': ['   Sessions']},
\ { 'type': 'dir', 'header': ['   MRU '.getcwd()] },
\ ]


" === Devicons ===
" devicons: reasonable defaults from webinstall.dev/vim-devicons
source ~/.vim/plugins/devicons.vim


" === Emmet ===
let g:user_emmet_install_global = 0
autocmd FileType html,css EmmetInstall


" === Airline ===
let g:airline_theme='nord'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_symbols.maxlinenr = 'Îž'
let g:airline_symbols.linenr = ' ln:'
let g:airline_symbols.colnr = ' char:'


" === Fzf ===
let g:fzf_preview_window = ['up:40%:hidden', 'ctrl-/']
let g:fzf_buffers_jump = 1
let g:fzf_commits_log_options = '--graph --color=always --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'
let g:fzf_tags_command = 'ctags -R'
let g:fzf_commands_expect = 'alt-enter,ctrl-x'
let $FZF_DEFAULT_COMMAND='find . \( -name node_modules -o -name .git \) -prune -o -print'


" === Coc ===
" After installing type this command in normal mode:
" CocInstall coc-json coc-tsserver coc-emmet coc-css coc-html
set nobackup
set nowritebackup
set updatetime=300
set signcolumn=yes
autocmd FileType scss setl iskeyword+=@-@

inoremap <expr> <cr> coc#pum#visible() ? coc#pum#confirm() : "\<CR>"
inoremap <silent><expr> <cr> coc#pum#visible() ? coc#_select_confirm() : "\<C-g>u\<CR>"

function! CheckBackspace() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" Tab - next list item
inoremap <silent><expr> <Tab>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ CheckBackspace() ? "\<Tab>" :
      \ coc#refresh()

" Shift+Tab - prev list item
inoremap <silent><expr> <S-Tab>
      \ coc#pum#visible() ? coc#pum#prev(1) :
      \ CheckBackspace() ? "\<S-Tab>" :
      \ coc#refresh()


" === Floaterm ===
let g:floaterm_height = 0.2
let g:floaterm_wintype = 'split'
